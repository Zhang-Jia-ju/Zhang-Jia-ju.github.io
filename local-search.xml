<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/06/26/hello-world/"/>
    <url>/2022/06/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HTML基础知识</title>
    <link href="/2021/12/10/html%E5%85%A5%E9%97%A8/"/>
    <url>/2021/12/10/html%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>超文本标记语言——HTML，是一种用于创建网页的标准标记语言。</p><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="（一）标签"><a href="#（一）标签" class="headerlink" title="（一）标签"></a>（一）标签</h3><p><code>HTML</code>语言由内容和标签构成，即：<code>&lt;标签&gt;内容&lt;/标签&gt;</code></p><ul><li><p>html的标签是成对出现的，开头和末尾，而标签代表描述类型的声明</p><p>例如：<code>&lt;b&gt; </code>和 <code>&lt;/b&gt;</code></p></li><li><p>标签对中的第一个标签是<strong>开始标签</strong>，第二个标签是<strong>结束标签</strong></p></li><li><p>开始和结束标签也被称为<strong>开放标签</strong>和<strong>闭合标签</strong></p></li></ul><p>ps:<code>html</code>元素和标签是一个意思，但元素往往就指开始标签和结束标签了</p><p>在web界面不会显示<strong>标签</strong>，标签决定将内容以什么样的格式（字体大小、排版等）显现给用户</p><p>例如，呈现的是这样</p><img src="https://s2.loli.net/2021/12/09/69Y58itHRkJMXxq.png" style="zoom:80%;" /><p>而代码实质是这样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>页面标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 以上是页面部分标题显示在任务模块中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是一个标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是另外一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-comment">&lt;!--这是正文部分的内容--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="（二）-lt-DOCTYPE-gt-声明"><a href="#（二）-lt-DOCTYPE-gt-声明" class="headerlink" title="（二）&lt;!DOCTYPE&gt; 声明"></a>（二）&lt;!DOCTYPE&gt; 声明</h3><!DOCTYPE><p>声明有助于浏览器中正确显示网页。</p><p>网络上有很多不同的文件，如果能够正确声明HTML的版本，浏览器就能正确显示网页内容。（doctype 声明是不区分大小写的）</p><p>一般情况下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="（三）编码格式"><a href="#（三）编码格式" class="headerlink" title="（三）编码格式"></a>（三）编码格式</h3><p>目前在大部分浏览器中，直接输出中文会出现<strong>中文乱码</strong>的情况，这时候我们就需要在头部将字符声明为 <strong>UTF-8</strong> 或 <strong>GBK</strong></p><p>因此介绍完之后，以此就是常用简单的 <code>HTML</code>的模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span> <span class="hljs-comment">&lt;!--声明部分写在最前面 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>     <span class="hljs-comment">&lt;!--设置编码格式--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>页面标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的第一个标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我的第一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span> <span class="hljs-comment">&lt;!--body写正文部分内容 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>即，一开始先声明，然后在 <code>&lt;head&gt;</code>中指定编码格式和页面标题，其次就是 <code>&lt;body&gt;</code>即正文部分</p><h2 id="二、结构标签"><a href="#二、结构标签" class="headerlink" title="二、结构标签"></a>二、结构标签</h2><h3 id="（一）HTML-标题"><a href="#（一）HTML-标题" class="headerlink" title="（一）HTML 标题"></a>（一）HTML 标题</h3><p>HTML 标题是通过<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 标签来定义的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我的二级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>我的三级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>我的四级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/09/Ow7ZrRHt1kg23ad.png" alt="这里是不是很像markdown😂"></p><h3 id="（二）HTML-段落"><a href="#（二）HTML-段落" class="headerlink" title="（二）HTML 段落"></a>（二）HTML 段落</h3><p>HTML 段落是通过标签 <code>&lt;p&gt;</code> 来定义的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是第一个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是第二个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是第三个段落。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这是第一个段落。</p><p>这是第二个段落。</p><p>这是第三个段落。</p></blockquote><h3 id="（三）HTML-链接"><a href="#（三）HTML-链接" class="headerlink" title="（三）HTML 链接"></a>（三）HTML 链接</h3><p>HTML 链接是通过标签 <code>&lt;a&gt;</code> 来定义的</p><p>在标签的内部写入 <code>href = 连接</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://zhang-jia-ju.github.io/&quot;</span>&gt;</span>这是一个链接使用了 href 属性<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>[这是一个链接使用了 href 属性](<a href="https://zhang-jia-ju.github.io/">Zhang&#39;s blog (zhang-jia-ju.github.io)</a>)</p></blockquote><h3 id="（四）HTML-图像"><a href="#（四）HTML-图像" class="headerlink" title="（四）HTML 图像"></a>（四）HTML 图像</h3><p>HTML 图像是通过标签 <code>&lt;img&gt;</code> 来定义的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图片连接&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;258&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;39&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="（五）换行符"><a href="#（五）换行符" class="headerlink" title="（五）换行符"></a>（五）换行符</h3><p>HTML中使用 <code>&lt;br&gt;</code>换行</p><p>并且换行标签没有结束标签，是一个<strong>单标签</strong></p><p>这里有一个小细节，就是在<strong>HTML4</strong>标准中，换行符是这样的 <code>&lt;br/&gt;</code></p><p>而在目前广泛使用的<strong>HTML5</strong>中，换行符是 <code>&lt;br&gt;</code>,不加斜杠</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我爱我的国<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>我爱我的校<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>我爱我的国<br>我爱我的校</p></blockquote><h3 id="（六）水平线"><a href="#（六）水平线" class="headerlink" title="（六）水平线"></a>（六）水平线</h3><p>这里也是一个<strong>单标签</strong>，用 <code>&lt;hr&gt;</code>表示</p><pre><code class="hljs">即会在该位置产生一个水平线，很容易理解，不再演示了</code></pre><h2 id="三、功能标签"><a href="#三、功能标签" class="headerlink" title="三、功能标签"></a>三、功能标签</h2><h3 id="（一）定义一个列表"><a href="#（一）定义一个列表" class="headerlink" title="（一）定义一个列表"></a>（一）定义一个列表</h3><h4 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="1.有序列表"></a>1.有序列表</h4><p>这里有序是指系统自动用<strong>阿拉伯数字</strong>进行排序</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">OL</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>工业工程<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>工程管理<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>电子商务<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>物流管理<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">OL</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表</h4><p>无序列表，使用<strong>符号</strong>进行排列，顺序按代码中的先后顺序</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">UL</span> &gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>工业工程<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>工程管理<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>电子商务<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">Li</span>&gt;</span>物流管理<span class="hljs-tag">&lt;/<span class="hljs-name">Li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">UL</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-自定义列表"><a href="#3-自定义列表" class="headerlink" title="3.自定义列表"></a>3.自定义列表</h4><p>使用<strong>自定义的序号</strong>的列表，先后顺序仍按照代码中的先后顺序</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>Coffee<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>Black hot drink<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>Milk<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>White cold drink<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>Coffee</p><blockquote><p>Black hot drink</p></blockquote><p>Milk</p><blockquote><p>White cold drink</p></blockquote></blockquote><h3 id="（二）短语标签"><a href="#（二）短语标签" class="headerlink" title="（二）短语标签"></a>（二）短语标签</h3><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>&lt;em&gt;</code></td><td align="center">呈现为被强调的文本。</td></tr><tr><td align="center"><code>&lt;strong&gt;</code></td><td align="center">定义重要的文本。</td></tr><tr><td align="center"><code>&lt;dfn&gt;</code></td><td align="center">定义一个定义项目。</td></tr><tr><td align="center"><code>&lt;code&gt;</code></td><td align="center">定义计算机代码文本。</td></tr><tr><td align="center"><code>&lt;samp&gt;</code></td><td align="center">定义样本文本。</td></tr><tr><td align="center"><code>&lt;kbd&gt;</code></td><td align="center">定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。</td></tr><tr><td align="center"><code>&lt;var&gt;</code></td><td align="center">定义变量。您可以将此标签与<code>&lt;pre&gt;</code> 及 <code>&lt;code&gt;</code> 标签配合使用。</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>强调文本<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>加粗文本<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dfn</span>&gt;</span>定义项目<span class="hljs-tag">&lt;/<span class="hljs-name">dfn</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>一段电脑代码 print(&quot;Hello World&quot;)<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">samp</span>&gt;</span>计算机样本<span class="hljs-tag">&lt;/<span class="hljs-name">samp</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>键盘输入<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">var</span>&gt;</span>变量<span class="hljs-tag">&lt;/<span class="hljs-name">var</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/09/eyZho3CjPANIkOJ.png"></p><h3 id="（三）标记标签"><a href="#（三）标记标签" class="headerlink" title="（三）标记标签"></a>（三）标记标签</h3><p><code>&lt;del&gt;</code>和 <code>&lt;ins&gt;</code>分别可以生成<strong>删除线</strong>和<strong>下划线</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我喜欢<span class="hljs-tag">&lt;<span class="hljs-name">del</span>&gt;</span>她<span class="hljs-tag">&lt;/<span class="hljs-name">del</span>&gt;</span>你<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我喜欢<span class="hljs-tag">&lt;<span class="hljs-name">ins</span>&gt;</span>她<span class="hljs-tag">&lt;/<span class="hljs-name">ins</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://s2.loli.net/2021/12/09/gWJo2hCkpam7IRL.png" alt="删除线&下划线"  /><h2 id="四、头部元素"><a href="#四、头部元素" class="headerlink" title="四、头部元素"></a>四、头部元素</h2><h3 id="（一）-lt-meta-gt-元素"><a href="#（一）-lt-meta-gt-元素" class="headerlink" title="（一）   &lt;meta&gt;元素"></a>（一）   <code>&lt;meta&gt;</code>元素</h3><p><code>&lt;meta&gt;</code>标签描述了一些基本的元数据。<code>&lt;meta&gt; </code>标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析</p><ul><li><p>为搜索引擎定义关键词</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;keywords&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;HTML, CSS, XML, XHTML, JavaScript&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>为网页定义描述内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;description&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;免费 Web &amp; 编程 教程&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>定义网页作者</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;author&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;Runoob&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>每30秒钟刷新当前页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;refresh&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;30&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="（二）-lt-script-gt-标签"><a href="#（二）-lt-script-gt-标签" class="headerlink" title="（二） &lt;script&gt;标签"></a>（二）<code> &lt;script&gt;</code>标签</h3><p><code>&lt;script&gt;</code>标签用于定义客户端脚本，比如 JavaScript。</p><p><code>&lt;script&gt; </code>元素既可包含脚本语句，也可以通过 “src” 属性指向外部脚本文件。</p><p>JavaScript 通常用于图像操作、表单验证以及动态内容更改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&quot;Hello World!&quot;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="（三）-lt-title-gt-标签"><a href="#（三）-lt-title-gt-标签" class="headerlink" title="（三） &lt;title&gt; 标签"></a>（三） <code>&lt;title&gt; </code>标签</h3><p>这个不用多说——定义了浏览器工具栏的标题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>文档标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="五、建立一个表格-amp-表单"><a href="#五、建立一个表格-amp-表单" class="headerlink" title="五、建立一个表格&amp;表单"></a>五、建立一个表格&amp;表单</h2><h3 id="（一）创建表格"><a href="#（一）创建表格" class="headerlink" title="（一）创建表格"></a>（一）创建表格</h3><p>创建表格之前首先要明白 <code>&lt;tr&gt; </code> <code>&lt;/tr&gt;</code>和 <code>&lt;td&gt;</code> <code>&lt;/td&gt;</code>以及 <code>&lt;th&gt;</code> <code>&lt;/th&gt;</code>三者的区别</p><p>先来看一串代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-comment">&lt;!-- 声明编码类型 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>通讯录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-comment">&lt;!-- 以下是html的主体内容 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><span class="hljs-comment">&lt;!-- 声明边框的宽度 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">caption</span> &gt;</span>通讯录<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><span class="hljs-comment">&lt;!-- 这里使得表中的内容剧中并且声明表的名称 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>QQ<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>联系电话<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>张三<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>123456789<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>123456789<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>运行结果：</p><pre><code class="hljs">通讯录</code></pre><table><thead><tr><th align="center">姓名</th><th align="center">QQ</th><th align="center">联系电话</th></tr></thead><tbody><tr><td align="center">张三</td><td align="center">123456789</td><td align="center">123456789</td></tr></tbody></table><p>由此可见</p><ul><li><code>&lt;tr&gt; </code> <code>&lt;/tr&gt;</code>的作用是为表格定义一行，在同一对该标签内，表示同一行，而先后顺序表示<strong>从左往右</strong>的顺序，</li><li><code>&lt;th&gt;</code> <code>&lt;/th&gt;</code>中<strong>h</strong>即表示<strong>head</strong>,所以显而易见该标签使用来定义表格中的<strong>表头</strong>单元格，即姓名、QQ、联系电话</li><li><code>&lt;td&gt;</code> <code>&lt;/td&gt;</code>中的<strong>d</strong>表示<strong>data</strong>，所以该标签用来定义表格中的数据单元格，说白了就是表中的数据，即张三、123456789、123456789</li></ul><p>所以表格的主体内容由这三个标签负责，且都嵌套在 <code>&lt;table&gt;</code> <code>&lt;/table&gt;</code>中</p><p><code>&lt;caption&gt;</code>的作用是定义一个表格的名字，这个名字会被放在表格的中心正上方</p><p><code>&lt;align&gt;</code>的作用是定义表格在网页中的位置，靠左、靠右、居中</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>在常见的网页设计中为了保证一定的美观性，通常情况下，会为单元格之间添加<strong>格间距</strong>和<strong>格边距</strong></p><h6 id="格间距"><a href="#格间距" class="headerlink" title="格间距"></a>格间距</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>单元格间距=&quot;10&quot;:<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>First<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Row<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Second<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Row<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://s2.loli.net/2021/12/10/DbnXqRP1c672w9I.png" alt="image-20211210190931887" style="zoom:80%;" /><p>是在 <code>&lt;table&gt;</code>内添加一个<strong>cellspacing</strong>并赋予其值（值的大小决定间距的大小）。</p><h6 id="格边距"><a href="#格边距" class="headerlink" title="格边距"></a>格边距</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">cellpadding</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>First<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Row<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>   <br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Second<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Row<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://s2.loli.net/2021/12/10/fZw4s3CJ2bzyBSn.png" alt="image-20211210191304335" style="zoom:80%;" /><p>与上面类似，是在 <code>&lt;table&gt;</code>里加一个<strong>cellpadding</strong>赋予其值的大小。</p><h3 id="（二）创建表单"><a href="#（二）创建表单" class="headerlink" title="（二）创建表单"></a>（二）创建表单</h3><p><strong>表单</strong>这里相较于<strong>表格的</strong>区别就是可以进行<strong>数据</strong>的<strong>输入</strong></p><p>输入的内容包括：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等</p><p>多数情况下被用到的表单标签是输入标签 <code>&lt;input&gt;</code>。输入类型（文本域，下拉列表，单选框，复选框）是由类型属性（<code>type</code>）定义的。</p><h4 id="1-文本域"><a href="#1-文本域" class="headerlink" title="1.文本域"></a>1.文本域</h4><p>文本域通过 <code>&lt;input type=&quot;text&quot;&gt; </code>标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</p><p>创建一个简单的文本域</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>First name: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;firstname&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>Last name: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;lastname&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://s2.loli.net/2021/12/10/eLM3vxi7AU4kNlR.png" alt="image-20211210164041886"  /><p>ps: 文本域的默认宽度是 20 个字符</p><h4 id="2-密码字段"><a href="#2-密码字段" class="headerlink" title="2.密码字段"></a>2.密码字段</h4><p>密码字段通过标签 <code>&lt;input type=&quot;password&quot;&gt; </code>来定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>Password: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pwd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/10/EYN5HB2IrvXukcF.png" alt="image-20211210164512603"></p><p>密码在输入的时候并不显示明文，而是以星号或者原点代替</p><h4 id="3-单选按钮（Radio-Buttons）"><a href="#3-单选按钮（Radio-Buttons）" class="headerlink" title="3.单选按钮（Radio Buttons）"></a>3.单选按钮（Radio Buttons）</h4><p><code>&lt;input type=&quot;radio&quot;&gt; </code>标签定义了表单单选框选项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;male&quot;</span>&gt;</span>Male<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;female&quot;</span>&gt;</span>Female<br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/10/Dj2siYwyPHXnGJk.png" alt="image-20211210164818046"></p><p><code>value</code>表示选中选项的<strong>实际值</strong>，而至于后面写的Male和Female只是选项上面的字</p><h4 id="4-复选按钮"><a href="#4-复选按钮" class="headerlink" title="4.复选按钮"></a>4.复选按钮</h4><p>与单选框类似，不过就是改成一个<strong>多选题</strong>而已，<code>&lt;input type=&quot;checkbox&quot;&gt; </code>定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;vehicle&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Bike&quot;</span>&gt;</span>I have a bike<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;vehicle&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Car&quot;</span>&gt;</span>I have a car<br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/10/H9KLVskvqS3EZTR.png" alt="image-20211210165112757"></p><h4 id="5-提交和重置按钮"><a href="#5-提交和重置按钮" class="headerlink" title="5.提交和重置按钮"></a>5.提交和重置按钮</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;html_form_action.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get&quot;</span>&gt;</span><br>Username: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span>&gt;</span> <span class="hljs-comment">&lt;!--定义提交按钮 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2021/12/10/gEtIkc84P6fZO3A.png" alt="image-20211210165618876"></p><p>这里补充一个小细节，<code>action</code>,当提交表单时，表单数据会提交到名为 <code>html_form_action.php</code>的界面；而 <code>method</code>属性是规定如何发送表单数据（表单数据发送到action属性所规定的页面）。</p><p>表单数据可以作为URL变量（method&#x3D;”get”）或者HTTP post（method&#x3D;”post”）的方式来发送。</p><p><strong>重置按钮</strong>如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Reset&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>两者都有一个 <code>value</code>值,这个主要是设定提交&#x2F;重置按键上面的字</p><hr><p>综上所述吧，暂且到此为止，HTML的知识点太多了，后续遇到还会再更新，主要是我好累啊~，我想睡会觉</p>]]></content>
    
    
    <categories>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MATLAB基础知识</title>
    <link href="/2021/10/13/MATLAB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2021/10/13/MATLAB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>从今天起就步入MATLAB的学习了，这也是建模的开端，接下来的日子里仍然会保持Python语言的更新（PS：在博文中我会对MATLAB简称为MAT，软件版本为MATLAB R2018a）</p><hr><span id="more"></span><h1 id="MAT命令的组成"><a href="#MAT命令的组成" class="headerlink" title="MAT命令的组成"></a>MAT命令的组成</h1><h2 id="一、基本的符号-“-gt-gt-”"><a href="#一、基本的符号-“-gt-gt-”" class="headerlink" title="一、基本的符号  “&gt;&gt;”"></a>一、基本的符号  “&gt;&gt;”</h2><p>命令行“头首”的”&gt;&gt;”是“指令输入提示符”，它是由软件自动生成的。     </p><p>即打开MAT后就会看到</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br></code></pre></td></tr></table></figure><p>“&gt;&gt;”为运算提示符，表示软件准备就绪，在此输入命令并“回车”后就可以运行，相信大家在Python里见过，这里就不过多解释了。  </p><h2 id="二、功能符号"><a href="#二、功能符号" class="headerlink" title="二、功能符号"></a>二、功能符号</h2><table><thead><tr><th align="center">标点</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center"><code>:</code></td><td align="center">具有多种功能</td></tr><tr><td align="center"><code>;</code></td><td align="center">区分行以及取消运行显示</td></tr><tr><td align="center"><code>,</code></td><td align="center">区分列及函数参数分隔符等</td></tr><tr><td align="center"><code>()</code></td><td align="center">指定运算优先顺序</td></tr><tr><td align="center"><code>[]</code></td><td align="center">定义矩阵</td></tr><tr><td align="center"><code>&#123;&#125;</code></td><td align="center">用于构成单元数组</td></tr><tr><td align="center"><code>.</code></td><td align="center">小数点及域访问符</td></tr><tr><td align="center"><code>...</code></td><td align="center">续行号</td></tr><tr><td align="center"><code>%</code></td><td align="center">注释</td></tr><tr><td align="center"><code>!</code></td><td align="center">调用操作系统运算</td></tr><tr><td align="center"><code>=</code></td><td align="center">赋值</td></tr><tr><td align="center"><code>&#39;</code></td><td align="center">字符串标记符</td></tr></tbody></table><h3 id="（一）分号"><a href="#（一）分号" class="headerlink" title="（一）分号"></a>（一）分号</h3><p>一般情况下，在MAT中命令行窗口输入命令，系统即会计算出结果</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><br>&gt;&gt; A=[<span class="hljs-number">1</span> <span class="hljs-number">2</span>;<span class="hljs-number">3</span> <span class="hljs-number">4</span>]<br><br>A =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span><br>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br><br></code></pre></td></tr></table></figure><p>若不想让MAT每次都显示运算结果，只需要在运算式最后加上分号<code>;</code>即：   </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A=[<span class="hljs-number">1</span> <span class="hljs-number">2</span>;<span class="hljs-number">3</span> <span class="hljs-number">4</span>];<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br></code></pre></td></tr></table></figure><p>MAT不输出结果</p><h3 id="（二）续行号"><a href="#（二）续行号" class="headerlink" title="（二）续行号"></a>（二）续行号</h3><p>若在输入命令时，若命令过长，一行不便于浏览，则可以通过续行号<code>...</code>使得命令分多行完成</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; y=<span class="hljs-number">1</span>+<span class="hljs-number">3</span>+<span class="hljs-number">5</span>+<span class="hljs-number">2</span>+<span class="hljs-number">7</span>+<span class="hljs-number">5</span>+...<br><span class="hljs-number">1</span>+<span class="hljs-number">2</span>+<span class="hljs-number">3</span>+<span class="hljs-number">4</span>+<span class="hljs-number">5</span>+<span class="hljs-number">2</span><br><br>y =<br><br>    <span class="hljs-number">40</span><br></code></pre></td></tr></table></figure><h3 id="（三）插入变量"><a href="#（三）插入变量" class="headerlink" title="（三）插入变量"></a>（三）插入变量</h3><p>这里没啥说的和C语言一样在变量插入时需要对变量进行定义</p><p>否则就会出现：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x<br>未定义函数或变量 <span class="hljs-string">&#x27;x&#x27;</span>。<br></code></pre></td></tr></table></figure><p>定义变量时可以加入公式，但是必须是常量公式</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x=<span class="hljs-number">4</span>*<span class="hljs-number">3</span><br><br>x =<br><br>    <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><h2 id="三、常用指令"><a href="#三、常用指令" class="headerlink" title="三、常用指令"></a>三、常用指令</h2><p>下面介绍几个MAT使用过程中经常会用到的一些指令</p><h3 id="（一）cd-显示或改变工作目录"><a href="#（一）cd-显示或改变工作目录" class="headerlink" title="（一）cd:显示或改变工作目录"></a>（一）cd:显示或改变工作目录</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; cd<br>E:\MATLAB666\MATLAB main file\bin<br></code></pre></td></tr></table></figure><h3 id="（二）clc-清理命令行窗口"><a href="#（二）clc-清理命令行窗口" class="headerlink" title="（二）clc:清理命令行窗口"></a>（二）clc:清理命令行窗口</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; clc<br></code></pre></td></tr></table></figure><h3 id="（三）clear-清除内存变量"><a href="#（三）clear-清除内存变量" class="headerlink" title="（三）clear:清除内存变量"></a>（三）clear:清除内存变量</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=<span class="hljs-number">1</span><br><br>a =<br><br>     <span class="hljs-number">1</span><br><br>&gt;&gt; clear a<br>&gt;&gt; a<br>未定义函数或变量 <span class="hljs-string">&#x27;a&#x27;</span>。<br></code></pre></td></tr></table></figure><h3 id="（四）其他常用的操作命令如下"><a href="#（四）其他常用的操作命令如下" class="headerlink" title="（四）其他常用的操作命令如下"></a>（四）其他常用的操作命令如下</h3><table><thead><tr><th align="center">命令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>clf</code></td><td align="center">清楚图形窗口</td></tr><tr><td align="center"><code>dir</code></td><td align="center">显示当前目录文件</td></tr><tr><td align="center"><code>disp</code></td><td align="center">显示变量或文字内容</td></tr><tr><td align="center"><code>hold</code></td><td align="center">保持图形</td></tr><tr><td align="center"><code>path</code></td><td align="center">显示搜索目录</td></tr><tr><td align="center"><code>type</code></td><td align="center">显示文件内容</td></tr><tr><td align="center"><code>load</code></td><td align="center">加载指定文件的变量</td></tr></tbody></table><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="一、变量与常量"><a href="#一、变量与常量" class="headerlink" title="一、变量与常量"></a>一、变量与常量</h2><h3 id="（一）变量"><a href="#（一）变量" class="headerlink" title="（一）变量"></a>（一）变量</h3><p>与C语言不同的是MAT中不需要对变量进行提前声明，但是需要对变量进行定义，在上文提到。</p><p>命名遵循以下原则：</p><ul><li>变量名必须以字母开头，之后可以是任意的字母、数字或下划线</li><li>变量名区分字母大小写</li><li>变量名不超过<strong>31</strong>个字符，第31个字符往后的字符将会被忽略(名字这么长，基本不可能🤭)</li></ul><h3 id="（二）常量"><a href="#（二）常量" class="headerlink" title="（二）常量"></a>（二）常量</h3><p>MAT自身给了一些预定义的变量，这些可以理解为常量</p><table><thead><tr><th align="center">变量名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ans</code></td><td align="center">MAT默认变量</td></tr><tr><td align="center"><code>pi</code></td><td align="center">圆周率3.1415…</td></tr><tr><td align="center"><code>eps</code></td><td align="center">[浮点运算的相对精度](<a href="https://ww2.mathworks.cn/help/matlab/ref/eps.html">浮点相对精度 - MATLAB eps - MathWorks 中国</a>)</td></tr><tr><td align="center"><code>inf</code></td><td align="center">无穷大</td></tr><tr><td align="center"><code>NaN</code></td><td align="center">不定值，如0&#x2F;0、∞&#x2F;∞</td></tr><tr><td align="center"><code>i(j)</code></td><td align="center">负数中的虚数单位</td></tr><tr><td align="center"><code>realmin</code></td><td align="center">[最小正浮点数](<a href="https://www.jianshu.com/p/046535189bf6">计算机中的浮点数 - 简书 (jianshu.com)</a>)</td></tr><tr><td align="center"><code>realmax</code></td><td align="center">[最大正浮点数](<a href="https://www.jianshu.com/p/046535189bf6">计算机中的浮点数 - 简书 (jianshu.com)</a>)</td></tr></tbody></table><p>利用<code>clear</code>举一个例子与上文进行对比</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-built_in">pi</span><br><br><span class="hljs-built_in">ans</span> =<br><br>    <span class="hljs-number">3.1416</span><br><br>&gt;&gt; clear <span class="hljs-built_in">pi</span><br>&gt;&gt; <span class="hljs-built_in">pi</span><br><br><span class="hljs-built_in">ans</span> =<br><br>    <span class="hljs-number">3.1416</span><br></code></pre></td></tr></table></figure><h2 id="二、数值"><a href="#二、数值" class="headerlink" title="二、数值"></a>二、数值</h2><p>MAT中数值类型分为<strong>整型</strong>、<strong>浮点型</strong>、<strong>复数类型</strong>三种</p><h3 id="（一）整型"><a href="#（一）整型" class="headerlink" title="（一）整型"></a>（一）整型</h3><p>整型一共包括八种即：</p><p><code>unsigned char</code>, <code>signed char</code>, <code>short int</code>,<code> unsigned short int</code>, <code>int</code>, <code>unsigned int</code>, <code>long int</code>, <code>unsigned long</code></p><p>很简单，就不一一介绍了[🔗](<a href="https://zhidao.baidu.com/question/1672296493207256947.html#:~:text=%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%898%E7%A7%8D%3A">https://zhidao.baidu.com/question/1672296493207256947.html#:~:text=整数的数据类型有8种%3A</a> unsigned char%2C signed char%2C short int%2C unsigned,int%2C int%2C unsigned int%2C long int%2C unsigned long。 )</p><h3 id="（二）浮点型"><a href="#（二）浮点型" class="headerlink" title="（二）浮点型"></a>（二）浮点型</h3><p>浮点型只采取十进制，表示形式有两种，即十进制数形式<code>1.545</code>和指数形式<code>2.5E5</code></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-number">2.5E5</span><br><br><span class="hljs-built_in">ans</span> =<br><br>      <span class="hljs-number">250000</span><br></code></pre></td></tr></table></figure><p>以下为<del>合法</del>不合法的实数，<del>请引用</del></p><ul><li><p><code>345</code>:无小数点  </p></li><li><p><code>E7</code>:阶码前无数字  </p></li><li><p><code>-5</code>：无阶码标志     </p></li><li><p><code>53.-E3</code>:负号位置❌</p></li><li><p><code>2.7E</code>:无阶码<br>补充一点，浮点型变量MAT中也分为两类，单精度和双精度型。</p></li></ul><h3 id="（三）复数类型"><a href="#（三）复数类型" class="headerlink" title="（三）复数类型"></a>（三）复数类型</h3><p>形如<code>a+bi</code>的数成为复数，高中基础，不过多介绍了，不懂看[链接](<a href="https://baike.baidu.com/item/%E5%A4%8D%E6%95%B0/254365">复数（数的概念扩展）_百度百科 (baidu.com)</a>)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-number">1</span>+<span class="hljs-number">2</span><span class="hljs-built_in">i</span><br><br><span class="hljs-built_in">ans</span> =<br><br>   <span class="hljs-number">1.0000</span> + <span class="hljs-number">2.0000</span><span class="hljs-built_in">i</span><br></code></pre></td></tr></table></figure><hr><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="一、算术运算符"><a href="#一、算术运算符" class="headerlink" title="一、算术运算符"></a>一、算术运算符</h2><table><thead><tr><th align="center">符号</th><th align="center">角色</th></tr></thead><tbody><tr><td align="center"><code>+</code></td><td align="center">加法（一元）</td></tr><tr><td align="center"><code>-</code></td><td align="center">减法（一元）</td></tr><tr><td align="center"><code>.\*</code></td><td align="center">按元素乘法</td></tr><tr><td align="center"><code>*</code></td><td align="center">矩阵乘法</td></tr><tr><td align="center"><code>./</code></td><td align="center">按元素右除</td></tr><tr><td align="center"><code>/</code></td><td align="center">矩阵右除</td></tr><tr><td align="center"><code>.\</code></td><td align="center">矩阵左除（也称为<em>反斜杠</em>）</td></tr><tr><td align="center"><code>.^</code></td><td align="center">按元素求幂</td></tr><tr><td align="center"><code>^</code></td><td align="center">矩阵幂</td></tr><tr><td align="center"><code>.&#39;</code></td><td align="center">转置</td></tr><tr><td align="center"><code>&#39;</code></td><td align="center">复共轭转置</td></tr></tbody></table><h2 id="二、关系运算符"><a href="#二、关系运算符" class="headerlink" title="二、关系运算符"></a>二、关系运算符</h2><table><thead><tr><th align="center">关系运算符</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center"><code>&lt;</code></td><td align="center">小于</td></tr><tr><td align="center"><code>&lt;=</code></td><td align="center">小于或等于</td></tr><tr><td align="center"><code>&gt;</code></td><td align="center">大于</td></tr><tr><td align="center"><code>\&gt;=</code></td><td align="center">大于或等于</td></tr><tr><td align="center"><code>==</code></td><td align="center">等于</td></tr><tr><td align="center"><code>~=</code></td><td align="center">不等于</td></tr></tbody></table><h2 id="三、逻辑运算符"><a href="#三、逻辑运算符" class="headerlink" title="三、逻辑运算符"></a>三、逻辑运算符</h2><table><thead><tr><th align="center">逻辑运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>&amp;</code></td><td align="center">逻辑与运算符</td></tr><tr><td align="center">&#96;</td><td align="center">&#96;</td></tr><tr><td align="center"><code>~</code></td><td align="center">逻辑非运算符</td></tr><tr><td align="center"><strong>逻辑运算函数</strong></td><td align="center"><strong>描述</strong></td></tr><tr><td align="center"><code>and(A, B)</code></td><td align="center">逻辑与运算函数，A 和 B 都为 1 时返回 1，否则返回 0</td></tr><tr><td align="center"><code>or(A, B)</code></td><td align="center">逻辑或运算函数，A 和 B 有一个为 1 时返回 1，都为 0 时才返回 0</td></tr><tr><td align="center"><code>not(A)</code></td><td align="center">逻辑非运算，A 为 1 时返回 0，A 为 0 时返回 1</td></tr><tr><td align="center"><code>xor(A, B)</code></td><td align="center">异或运算函数，A 和 B 不同是返回 1，相同时返回 0</td></tr><tr><td align="center"><strong>向量运算函数</strong></td><td align="center"><strong>描述</strong></td></tr><tr><td align="center"><code>any(A)</code></td><td align="center">向量 A 中有非 0 元素时返回 1，矩阵 A 某一列有非 0 元素时返回 1</td></tr><tr><td align="center"><code>all(A)</code></td><td align="center">向量 A 中所有元素都为非 0 时返回 1，矩阵 A 中某列所有元素都为非 0 时返回 1</td></tr></tbody></table><hr><h1 id="函数运算"><a href="#函数运算" class="headerlink" title="函数运算"></a>函数运算</h1><h2 id="（一）复数运算"><a href="#（一）复数运算" class="headerlink" title="（一）复数运算"></a>（一）复数运算</h2><p>以下是MAT提供的复数运算函数</p><table><thead><tr><th align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/abs.html"><code>abs</code></a></th><th>绝对值和复数的模</th></tr></thead><tbody><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/angle.html"><code>angle</code></a></td><td>相位角</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/complex.html"><code>complex</code></a></td><td>创建复数数组</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/conj.html"><code>conj</code></a></td><td>复共轭</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/cplxpair.html"><code>cplxpair</code></a></td><td>将复数排序为复共轭对组</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/i.html"><code>i</code></a></td><td>虚数单位</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/imag.html"><code>imag</code></a></td><td>复数的虚部</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/isreal.html"><code>isreal</code></a></td><td>确定数组是否使用复数存储</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/j.html"><code>j</code></a></td><td>虚数单位</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/real.html"><code>real</code></a></td><td>复数的实部</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/sign.html"><code>sign</code></a></td><td>Sign 函数（符号函数）</td></tr><tr><td align="center"><a href="https://ww2.mathworks.cn/help/matlab/ref/unwrap.html"><code>unwrap</code></a></td><td>平移相位角</td></tr></tbody></table><h2 id="（二）三角函数运算"><a href="#（二）三角函数运算" class="headerlink" title="（二）三角函数运算"></a>（二）三角函数运算</h2><table><thead><tr><th align="center">函数名</th><th align="center">功能描述</th><th align="center">函数名</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">sin</td><td align="center">正弦</td><td align="center">sec</td><td align="center">正割</td></tr><tr><td align="center">sind</td><td align="center">正弦，输入以度为单位</td><td align="center">secd</td><td align="center">正割，输入以度为单位</td></tr><tr><td align="center">sinh</td><td align="center">双曲正弦</td><td align="center">sech</td><td align="center">双曲正割</td></tr><tr><td align="center">asin</td><td align="center">反正弦</td><td align="center">asec</td><td align="center">反正割</td></tr><tr><td align="center">asind</td><td align="center">反正弦，输出以度为单位</td><td align="center">asecd</td><td align="center">反正割，输出以度为单位</td></tr><tr><td align="center">asinh</td><td align="center">反双曲正弦</td><td align="center">asech</td><td align="center">反双曲正割</td></tr><tr><td align="center">cos</td><td align="center">余弦</td><td align="center">csc</td><td align="center">余割</td></tr><tr><td align="center">cosd</td><td align="center">余弦，输出以度为单位</td><td align="center">cscd</td><td align="center">余割，输出以度为单位</td></tr><tr><td align="center">cosh</td><td align="center">双曲余弦</td><td align="center">csch</td><td align="center">双曲余割</td></tr><tr><td align="center">acos</td><td align="center">反余弦</td><td align="center">acsc</td><td align="center">反余割</td></tr><tr><td align="center">acosd</td><td align="center">反余弦，输入以度为单位</td><td align="center">acscd</td><td align="center">反余割，输出以度为单位</td></tr><tr><td align="center">acosh</td><td align="center">反双曲余弦</td><td align="center">acsch</td><td align="center">反双曲余割</td></tr><tr><td align="center">tan</td><td align="center">正切</td><td align="center">cot</td><td align="center">余切</td></tr><tr><td align="center">tand</td><td align="center">正切，输入以度为单位</td><td align="center">cotd</td><td align="center">余切，输出以度为单位</td></tr><tr><td align="center">tanh</td><td align="center">双曲正切</td><td align="center">coth</td><td align="center">双曲余切</td></tr><tr><td align="center">atan</td><td align="center">反正切</td><td align="center">acot</td><td align="center">反余切</td></tr><tr><td align="center">atand</td><td align="center">反正切，输出以度为单位</td><td align="center">acotd</td><td align="center">反余切，输出以度为单位</td></tr><tr><td align="center">atan2</td><td align="center">四象限反正切</td><td align="center">acoth</td><td align="center">反双曲余切</td></tr></tbody></table><h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><h2 id="一、向量的生成"><a href="#一、向量的生成" class="headerlink" title="一、向量的生成"></a>一、向量的生成</h2><p>向量的生成有直接输入法、冒号法和利用MAT函数创建三种方法</p><h3 id="（一）直接输入法"><a href="#（一）直接输入法" class="headerlink" title="（一）直接输入法"></a>（一）直接输入法</h3><p>顾名思义就是在使用向量时在命令行直接输入，但格式要求如下：</p><ul><li>向量元素需要使用<code>[]</code>括起来</li><li>元素之间可以用空格、分号、逗号间隔</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> ]<br>&gt;&gt; x=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>&gt;&gt; x=[<span class="hljs-number">1</span>;<span class="hljs-number">2</span>;<span class="hljs-number">3</span>;<span class="hljs-number">4</span>]<br></code></pre></td></tr></table></figure><h3 id="（二）冒号法"><a href="#（二）冒号法" class="headerlink" title="（二）冒号法"></a>（二）冒号法</h3><p>基本格式是<code>x=first:increment:last</code>,可以表示创建一个从<code>first</code>开始到<code>last</code>结束，元素增量为<code>increment</code>。若增量为<strong>1</strong>，那么<code>increment</code>可以省略不写</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x=<span class="hljs-number">0</span>:<span class="hljs-number">2</span>:<span class="hljs-number">8</span><br><br>x =<br><br>     <span class="hljs-number">0</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">6</span>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="（三）利用linspace函数"><a href="#（三）利用linspace函数" class="headerlink" title="（三）利用linspace函数"></a>（三）利用<code>linspace</code>函数</h3><p><code>linspace</code>可以直接定义数据元素的个数,格式为<code>linspace(first_value,last_value,number)</code>,<code>number</code>表示向量元素的个数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>)<br><br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">0</span>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">6</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h3 id="（四）利用logspace函数"><a href="#（四）利用logspace函数" class="headerlink" title="（四）利用logspace函数"></a>（四）利用<code>logspace</code>函数</h3><p><code>logspace</code>也是通过直接定义向量元素的个数进行创建，格式也是<code>linspace(first_value,last_value,number)</code>,但与之不同的是创建的是一个从10^first_value^开始，到10^last_value^结束的并包括number个元素的向量</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; <span class="hljs-built_in">logspace</span>(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<br><br><span class="hljs-built_in">ans</span> =<br><br>          <span class="hljs-number">10</span>         <span class="hljs-number">100</span>        <span class="hljs-number">1000</span><br></code></pre></td></tr></table></figure><h2 id="二、向量元素的引用"><a href="#二、向量元素的引用" class="headerlink" title="二、向量元素的引用"></a>二、向量元素的引用</h2><p>常用的引用方式</p><table><thead><tr><th align="center">格式</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>x(n)</code></td><td align="center">表示向量中的第<strong>n</strong>个元素</td></tr><tr><td align="center"><code>x(n1:n2)</code></td><td align="center">表示向量中第<strong>n1</strong>至第<strong>n2</strong>个元素</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span>];<br>&gt;&gt; x(<span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; x=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span> ];<br>&gt;&gt; x(<span class="hljs-number">1</span>:<span class="hljs-number">3</span>)<br><br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h2 id="三、向量运算"><a href="#三、向量运算" class="headerlink" title="三、向量运算"></a>三、向量运算</h2><p>线性代数告诉我们向量可以看成一个特殊的矩阵，所有向量运算实质上就是矩阵的运算，这里除了<strong>四则运算外</strong>还有向量的<strong>点积</strong>、<strong>叉积</strong>和<strong>混合积</strong></p><h3 id="（一）四则运算"><a href="#（一）四则运算" class="headerlink" title="（一）四则运算"></a>（一）四则运算</h3><h4 id="1-对向量定义"><a href="#1-对向量定义" class="headerlink" title="1.对向量定义"></a>1.对向量定义</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=<span class="hljs-built_in">logspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>)<br><br>a =<br><br>           <span class="hljs-number">1</span>          <span class="hljs-number">10</span>         <span class="hljs-number">100</span>        <span class="hljs-number">1000</span>       <span class="hljs-number">10000</span>      <span class="hljs-number">100000</span><br></code></pre></td></tr></table></figure><h4 id="2-加法运算"><a href="#2-加法运算" class="headerlink" title="2.加法运算"></a>2.加法运算</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a+<span class="hljs-number">10</span><br><br><span class="hljs-built_in">ans</span> =<br><br>          <span class="hljs-number">11</span>          <span class="hljs-number">20</span>         <span class="hljs-number">110</span>        <span class="hljs-number">1010</span>       <span class="hljs-number">10010</span>      <span class="hljs-number">100010</span><br></code></pre></td></tr></table></figure><h4 id="3-减法运算"><a href="#3-减法运算" class="headerlink" title="3.减法运算"></a>3.减法运算</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a<span class="hljs-number">-1</span><br><br><span class="hljs-built_in">ans</span> =<br><br>           <span class="hljs-number">0</span>           <span class="hljs-number">9</span>          <span class="hljs-number">99</span>         <span class="hljs-number">999</span>        <span class="hljs-number">9999</span>       <span class="hljs-number">99999</span><br></code></pre></td></tr></table></figure><h4 id="4-乘法运算"><a href="#4-乘法运算" class="headerlink" title="4.乘法运算"></a>4.乘法运算</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a*<span class="hljs-number">5</span><br><br><span class="hljs-built_in">ans</span> =<br><br>           <span class="hljs-number">5</span>          <span class="hljs-number">50</span>         <span class="hljs-number">500</span>        <span class="hljs-number">5000</span>       <span class="hljs-number">50000</span>      <span class="hljs-number">500000</span><br></code></pre></td></tr></table></figure><h4 id="5-除法运算"><a href="#5-除法运算" class="headerlink" title="5.除法运算"></a>5.除法运算</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span>];<br>&gt;&gt; a/<span class="hljs-number">2</span><br><br><span class="hljs-built_in">ans</span> =<br><br>    <span class="hljs-number">0.5000</span>    <span class="hljs-number">1.0000</span>    <span class="hljs-number">1.5000</span>    <span class="hljs-number">2.0000</span>    <span class="hljs-number">2.5000</span><br></code></pre></td></tr></table></figure><h4 id="6-混合运算"><a href="#6-混合运算" class="headerlink" title="6.混合运算"></a>6.混合运算</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a*<span class="hljs-number">5</span>+<span class="hljs-number">1</span><br><br><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">6</span>    <span class="hljs-number">11</span>    <span class="hljs-number">16</span>    <span class="hljs-number">21</span>    <span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><h3 id="（二）点积"><a href="#（二）点积" class="headerlink" title="（二）点积"></a>（二）点积</h3><p>MAT中实现<strong>点积</strong>有两种方法，即<code>a*b</code>和调用函数<code>dot</code>进行计算</p><p><code>dot</code>的调用格式分以下两种:</p><ul><li><p><code>C = dot(a,b)</code></p><ul><li><p>如果 <code>A</code> 和 <code>B</code> 是向量，则它们的长度必须相同</p></li><li><p>如果 <code>A</code> 和 <code>B</code> 为矩阵或多维数组，则它们必须具有相同大小。在本例中，<code>dot</code> 函数将 <code>A</code> 和 <code>B</code> 视为向量集合。该函数计算对应向量沿大小不等于 1 的第一个数组维度的叉积</p></li></ul></li><li><p><code>C = dot(a,b,dim)</code></p><ul><li>返回向量<strong>a</strong>和<strong>b</strong>在<strong>dim</strong>维的点积</li></ul></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A = [<span class="hljs-number">4</span> <span class="hljs-number">-1</span> <span class="hljs-number">2</span>];<br>B = [<span class="hljs-number">2</span> <span class="hljs-number">-2</span> <span class="hljs-number">-1</span>];<br>&gt;&gt; C = <span class="hljs-built_in">dot</span>(A,B)<br><br>C =<br><br>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p>  C &#x3D; A(1)*B(1) + A(2)*B(2) + A(3)*B(3)</p><h3 id="（三）叉积"><a href="#（三）叉积" class="headerlink" title="（三）叉积"></a>（三）叉积</h3><p>空间解析几何中，两向量叉积后得到的是一个垂直于过交点且垂直于两向量平面的法向量，在MAT中我们使用<code>cross</code>来实现。</p><p><code>cross</code>的调用也分以下两种:</p><ul><li><code>C=cross(a,b)</code><ul><li>如果 <code>A</code> 和 <code>B</code> 为向量，则它们必须是三维的</li><li>如果 <code>A</code> 和 <code>B</code> 为矩阵或多维数组，则它们必须具有相同大小。在这种情况下，<code>cross</code> 函数将 <code>A</code> 和 <code>B</code> 视为三元素向量集合。该函数计算对应向量沿大小等于 3 的第一个数组维度的叉积</li></ul></li><li><code>C=cross(a,b,dim)</code><ul><li>计算数组 <code>A</code> 和 <code>B</code> 沿维度 <code>dim</code> 的叉积。<code>A</code> 和 <code>B</code> 必须具有相同的大小，并且 <code>size(A,dim)</code> 和 <code>size(B,dim)</code> 必须为 3。<code>dim</code> 输入是一个正整数标量</li></ul></li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A = [<span class="hljs-number">4</span> <span class="hljs-number">-2</span> <span class="hljs-number">1</span>];<br>B = [<span class="hljs-number">1</span> <span class="hljs-number">-1</span> <span class="hljs-number">3</span>];<br>&gt;&gt; C = <span class="hljs-built_in">cross</span>(A,B)<br><br>C =<br><br>    <span class="hljs-number">-5</span>   <span class="hljs-number">-11</span>    <span class="hljs-number">-2</span><br></code></pre></td></tr></table></figure><h3 id="（四）混合积"><a href="#（四）混合积" class="headerlink" title="（四）混合积"></a>（四）混合积</h3><p>线性代数告诉我们向量的混合积是由$\vec{a}$和$\vec{b}$的<strong>叉积</strong>结果向量再<strong>点乘</strong>$\vec{c}$，MAT中向量的混合积运算可以由以上的两个函数<code>(dot,cross)</code>共同来实现,格式为<code>dot(a,cross(b,c))</code></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> ];<br>&gt;&gt; b=[<span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span>];<br>&gt;&gt; c=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span>];<br>&gt;&gt; d=<span class="hljs-built_in">dot</span>(a,<span class="hljs-built_in">cross</span>(b,c))<br><br>d =<br><br>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><hr><h1 id="多项式"><a href="#多项式" class="headerlink" title="多项式"></a>多项式</h1><h2 id="一、多项式的创建"><a href="#一、多项式的创建" class="headerlink" title="一、多项式的创建"></a>一、多项式的创建</h2><p>这个。。。废话不多说，直接输入呗😉</p><p>例如代数式a*x^2^</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a*x.^n<br></code></pre></td></tr></table></figure><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><h2 id="（一）矩阵定义"><a href="#（一）矩阵定义" class="headerlink" title="（一）矩阵定义"></a>（一）矩阵定义</h2><p>MAT以矩阵作为数据操作的基本单位，矩阵是由m*n个数a<del>ij</del>(i&#x3D;1,2,…..,m;j&#x3D;1,2,3……m)排成的m行n列数表</p><p>记作：<br>$$<br>A &#x3D; \left[ \begin{matrix} a11 &amp; a12 &amp; …&amp; a1n\ a21 &amp; a22 &amp; … &amp; a2n \… &amp; … &amp;…&amp; … \ am1 &amp; am2 &amp; …  &amp; amn \end{matrix} \right]<br>$$<br>称为m*n矩阵，也可以记作a<del>ij</del>或A<del>mn</del>，其中<strong>i</strong>表示行数，<strong>j</strong>表是列数，若m&#x3D;n那么改矩阵又被称之为<strong>n</strong>阶方阵</p><p>ok介绍完毕，线代的内容可自行翻书(≧▽≦q)</p><p>使用矩阵的第一步就是创建矩阵，形式如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[<span class="hljs-number">15</span> <span class="hljs-number">15</span> <span class="hljs-number">15</span>;<span class="hljs-number">14</span> <span class="hljs-number">14</span> <span class="hljs-number">14</span>; <span class="hljs-number">13</span> <span class="hljs-number">13</span> <span class="hljs-number">13</span>]<br><br>a =<br><br>    <span class="hljs-number">15</span>    <span class="hljs-number">15</span>    <span class="hljs-number">15</span><br>    <span class="hljs-number">14</span>    <span class="hljs-number">14</span>    <span class="hljs-number">14</span><br>    <span class="hljs-number">13</span>    <span class="hljs-number">13</span>    <span class="hljs-number">13</span><br></code></pre></td></tr></table></figure><p>行之间用<strong>；</strong>隔开，列之间用<strong>空格</strong>隔开，整体要用<code>[]</code>包括</p><p>补充一点在矩阵的输入过程中，每一行加上<code>[]</code>也是合法的，但是整体一定不要漏掉中括号</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; a=[[<span class="hljs-number">15</span> <span class="hljs-number">15</span> <span class="hljs-number">15</span>];[<span class="hljs-number">14</span> <span class="hljs-number">14</span> <span class="hljs-number">14</span>]; <span class="hljs-number">13</span> <span class="hljs-number">13</span> <span class="hljs-number">13</span>]<br><br>a =<br><br>    <span class="hljs-number">15</span>    <span class="hljs-number">15</span>    <span class="hljs-number">15</span><br>    <span class="hljs-number">14</span>    <span class="hljs-number">14</span>    <span class="hljs-number">14</span><br>    <span class="hljs-number">13</span>    <span class="hljs-number">13</span>    <span class="hljs-number">13</span><br></code></pre></td></tr></table></figure><p>创建一个<strong>复数</strong>矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A=[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>+<span class="hljs-built_in">i</span>,<span class="hljs-number">2</span>;<span class="hljs-number">2</span>,<span class="hljs-number">3</span>+<span class="hljs-number">2</span><span class="hljs-built_in">i</span>,<span class="hljs-number">1</span>]<br><br>A =<br><br>   <span class="hljs-number">1.0000</span> + <span class="hljs-number">0.0000</span><span class="hljs-built_in">i</span>   <span class="hljs-number">1.0000</span> + <span class="hljs-number">1.0000</span><span class="hljs-built_in">i</span>   <span class="hljs-number">2.0000</span> + <span class="hljs-number">0.0000</span><span class="hljs-built_in">i</span><br>   <span class="hljs-number">2.0000</span> + <span class="hljs-number">0.0000</span><span class="hljs-built_in">i</span>   <span class="hljs-number">3.0000</span> + <span class="hljs-number">2.0000</span><span class="hljs-built_in">i</span>   <span class="hljs-number">1.0000</span> + <span class="hljs-number">0.0000</span><span class="hljs-built_in">i</span><br></code></pre></td></tr></table></figure><h2 id="（二）矩阵的生成"><a href="#（二）矩阵的生成" class="headerlink" title="（二）矩阵的生成"></a>（二）矩阵的生成</h2><p>以上介绍了矩阵通过直接输入的方式来生成，以下介绍两种：利用M文件生成法和文本文件生成法</p><h3 id="1-利用M文件生成法"><a href="#1-利用M文件生成法" class="headerlink" title="1.利用M文件生成法"></a>1.利用M文件生成法</h3><p>该方法主要适用于当矩阵的规模比较大的时候，直接输入法显得笨拙</p><p>第一，创建一个脚本文件，记好文件名（这里我用的文件名为<strong>Untitled3</strong>），在改&#x3D;该文件里创建一个矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">%Untitled3</span><br><span class="hljs-comment">%创建一个名为gmatrix的矩阵</span><br>gmatrix=[<span class="hljs-number">132</span> <span class="hljs-number">34</span> <span class="hljs-number">23</span> <span class="hljs-number">4</span> <span class="hljs-number">54</span> <span class="hljs-number">34</span> ;<span class="hljs-number">12</span> <span class="hljs-number">34</span> <span class="hljs-number">56</span> <span class="hljs-number">23</span> <span class="hljs-number">23</span> <span class="hljs-number">14</span>; <span class="hljs-number">143</span> <span class="hljs-number">14</span> <span class="hljs-number">34</span> <span class="hljs-number">56</span> <span class="hljs-number">23</span> <span class="hljs-number">34</span>;<span class="hljs-number">143</span> <span class="hljs-number">23</span> <span class="hljs-number">56</span> <span class="hljs-number">34</span> <span class="hljs-number">26</span> <span class="hljs-number">343</span>];<br></code></pre></td></tr></table></figure><p>第二，右键点中文件，<strong>运行</strong>该文件，在MAT的命令窗口输入<strong>文件名</strong>和<strong>矩阵名</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; Untitled3<br>&gt;&gt; gmatrix<br></code></pre></td></tr></table></figure><p>随后便得到以下结果</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">gmatrix =<br><br>   <span class="hljs-number">132</span>    <span class="hljs-number">34</span>    <span class="hljs-number">23</span>     <span class="hljs-number">4</span>    <span class="hljs-number">54</span>    <span class="hljs-number">34</span><br>    <span class="hljs-number">12</span>    <span class="hljs-number">34</span>    <span class="hljs-number">56</span>    <span class="hljs-number">23</span>    <span class="hljs-number">23</span>    <span class="hljs-number">14</span><br>   <span class="hljs-number">143</span>    <span class="hljs-number">14</span>    <span class="hljs-number">34</span>    <span class="hljs-number">56</span>    <span class="hljs-number">23</span>    <span class="hljs-number">34</span><br>   <span class="hljs-number">143</span>    <span class="hljs-number">23</span>    <span class="hljs-number">56</span>    <span class="hljs-number">34</span>    <span class="hljs-number">26</span>   <span class="hljs-number">343</span><br></code></pre></td></tr></table></figure><p>注意：M文件中的变量名（矩阵名）不能和文件名相同，这样会使得变量名和函数名的混乱</p><h3 id="2-利用文本创建"><a href="#2-利用文本创建" class="headerlink" title="2.利用文本创建"></a>2.利用文本创建</h3><p>第一步，在MAT的路径文件夹里创建一个<strong>txt</strong>文件，这里起名叫**files1，并在文件内输入矩阵的元素，并保存</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">4 </span><span class="hljs-number">5</span> <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p>第二步，在MAT的命令框里输入</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; load file1.txt<br>&gt;&gt; file1<br><br>file1 =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p>注意：在创建txt文件时，一定要确保文件处于MAT的当前目录文件夹下，否则无法运行</p><h2 id="（三）创建特殊矩阵"><a href="#（三）创建特殊矩阵" class="headerlink" title="（三）创建特殊矩阵"></a>（三）创建特殊矩阵</h2><ul><li><p>零矩阵:</p><ul><li><p>zeros(m):产生m*m零矩阵</p></li><li><p>zeros(m,n):产生m*n零矩阵</p></li><li><p>zeros(size(A)):产生与矩阵A同样大小的零矩阵</p></li></ul></li><li><p>全1矩阵:</p><ul><li><p>ones(m:产生mm全1矩阵</p></li><li><p>ones(m,n):产生mn全1矩阵</p></li><li><p>ones(size(A)):产生与矩阵A同样大小的全1矩阵</p></li></ul></li><li><p>对角线为1的矩阵:</p><ul><li>eye(m):产生mm的单位矩阵</li><li>eye(m,n):产生mn的对角线为1的矩阵</li><li>eye(size(A)):产生与矩阵A同样大小的对角线为1矩阵</li></ul></li><li><p>随机矩阵:</p><ul><li>rand(m):产生mm的(0,1)区间里均匀分布的随机矩阵</li><li>randn(m):产生mm的均值为0，方差为1的标准正态分布随机矩阵</li></ul></li><li><p>魔方矩阵:</p><ul><li>magic(m):产生m阶的魔方矩阵</li></ul></li><li><p>范德蒙矩阵:</p><ul><li>vander(V):产生以V为基础的范德蒙矩阵</li></ul></li><li><p>希尔伯特矩阵:</p><ul><li>Hilb(V):产生以V为基础的希尔伯特矩阵</li></ul></li><li><p>伴随矩阵:</p><ul><li>compan§:产生以p为基础的伴随矩阵。其中p是多项式的向量</li></ul></li><li><p>帕斯卡矩阵:</p><ul><li>pascal(n):生成一个n阶帕斯卡矩阵</li></ul></li></ul><h2 id="（四）矩阵元素的运算"><a href="#（四）矩阵元素的运算" class="headerlink" title="（四）矩阵元素的运算"></a>（四）矩阵元素的运算</h2><p>矩阵中的元素和向量中的元素一样，也可以抽取引用、编辑修改等操作（这句话是套话）😊</p><h3 id="1-矩阵元素的修改"><a href="#1-矩阵元素的修改" class="headerlink" title="1.矩阵元素的修改"></a>1.矩阵元素的修改</h3><p>在建立一个矩阵后，要使用一些语句对矩阵进行修改</p><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>D=[A;B C]</code></td><td align="center">A为原矩阵，B，C中包含要扩充的元素，D为扩充后的矩阵</td></tr><tr><td align="center"><code>A(m,:) = [ ]</code></td><td align="center">删除A的第m行</td></tr><tr><td align="center"><code>A(;,n)=[]</code></td><td align="center">删除A的第n列</td></tr><tr><td align="center"><code>A(m,n)=a;A(m,:)=[a,b...];A(:,n)=[a b...]</code></td><td align="center">对A的第m行以及第n列赋值</td></tr></tbody></table><p>其他的都通俗易懂，下面用代码解释一下<strong>命令1</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> ; <span class="hljs-number">4</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span>];<br>&gt;&gt; B=<span class="hljs-built_in">eye</span>(<span class="hljs-number">2</span>);<br>&gt;&gt; C=<span class="hljs-built_in">zeros</span>(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>);<br>&gt;&gt; D=[A;B C]<br><br>D =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="2-矩阵的变维"><a href="#2-矩阵的变维" class="headerlink" title="2.矩阵的变维"></a>2.矩阵的变维</h3><p>矩阵的变维有两种方法：<code>:</code>法和<code>reshape</code>的函数法。调用格式：<code>reshape(X,m,n):</code>将已知的矩阵变维成<strong>m</strong>行<strong>n</strong>列的矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; A=[<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">10</span>;<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">11</span>;<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">12</span>] ;<br>&gt;&gt; B=<span class="hljs-built_in">reshape</span>(A,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>)     <span class="hljs-comment">%变为2×6矩阵  </span><br><br>B =<br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span>    <span class="hljs-number">11</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">6</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span>    <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p>这里2或6可以用<code>[]</code>代替，然后系统自动会计算出<code>[]</code>的值</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; B=<span class="hljs-built_in">reshape</span>(A,[],<span class="hljs-number">6</span>)        <span class="hljs-comment">%用[]代替其中一个维度  </span><br>B =  <br> <br>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">5</span>     <span class="hljs-number">7</span>     <span class="hljs-number">9</span>    <span class="hljs-number">11</span>  <br>     <span class="hljs-number">2</span>     <span class="hljs-number">4</span>     <span class="hljs-number">6</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span>    <span class="hljs-number">12</span>  <br></code></pre></td></tr></table></figure><h3 id="3-矩阵变向"><a href="#3-矩阵变向" class="headerlink" title="3.矩阵变向"></a>3.矩阵变向</h3><table><thead><tr><th align="center">命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>Rot(90)</code></td><td align="center">将A逆时针方向旋转90°</td></tr><tr><td align="center"><code>Rot(90,k)</code></td><td align="center">将A逆时针方向旋转90*k°，k为正整数或负整数</td></tr><tr><td align="center"><code>Fliplr(X)</code></td><td align="center">将X左右翻转</td></tr><tr><td align="center"><code>flipud(X)</code></td><td align="center">将X上下翻转</td></tr><tr><td align="center"><code>flipdim(X,dim)q</code></td><td align="center">dim&#x3D;1时对行翻转，dim&#x3D;2时对列翻转</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MATLAB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python自学</title>
    <link href="/2021/10/10/Python%E8%87%AA%E5%AD%A6/"/>
    <url>/2021/10/10/Python%E8%87%AA%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p>Python——万物皆对象</p><span id="more"></span><h1 id="一、print输出数字字符和表达式"><a href="#一、print输出数字字符和表达式" class="headerlink" title="一、print输出数字字符和表达式"></a>一、print输出数字字符和表达式</h1><h2 id="print输出字符"><a href="#print输出字符" class="headerlink" title="print输出字符"></a>print输出字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello world&quot;</span>)  <span class="hljs-comment"># 加引号进行原样输</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world&#x27;</span>)=<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello  world&quot;</span>)<br><span class="hljs-comment">#在python中print后的单引号和双引号作用相同。鉴于总体建议仍然使用双引号</span><br></code></pre></td></tr></table></figure><p>print的引号里内容总保证原样输出的状态，这一点和c语言保证一致</p><h2 id="print输出表达式"><a href="#print输出表达式" class="headerlink" title="print输出表达式"></a>print输出表达式</h2><p>对于需要计算机执行的表达式或运算符这里不用加<strong>引号</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-number">3</span>+<span class="hljs-number">2</span>)  <br></code></pre></td></tr></table></figure><p>输出：<strong>5</strong></p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-number">2</span>-<span class="hljs-number">3</span>)<span class="hljs-comment"># 输出-1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">4</span>*<span class="hljs-number">5</span>)<span class="hljs-comment"># 输出20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">4</span>/<span class="hljs-number">5</span>)<span class="hljs-comment"># 输出0.8</span><br></code></pre></td></tr></table></figure><p>输出：-1<br>输出：20<br>输出：0.8<br>由此可见python在某些计算中无需像C语言那样规定数据的类型，操作简便许多、代码的可读性也更强。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;因为考试复习，暂时再见，see  you!&quot;</span>)<br></code></pre></td></tr></table></figure><p>先说一下，考试考完了，祝我不挂吧！</p><h3 id="（4）print输出不同的字符类型"><a href="#（4）print输出不同的字符类型" class="headerlink" title="（4）print输出不同的字符类型"></a>（4）print输出不同的字符类型</h3><h4 id="二进制型"><a href="#二进制型" class="headerlink" title="二进制型"></a>二进制型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-number">0b101110111</span>)  <span class="hljs-comment"># 输出二进制数，二进制0b开头且后面为0和1组成</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210701164727694.png" alt="在这里插入图片描述"><br>不难看出在print内输入一个二进制数，计算机会将其自动翻译为十进制数输出。</p><h4 id="八进制和十六进制数"><a href="#八进制和十六进制数" class="headerlink" title="八进制和十六进制数"></a>八进制和十六进制数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-number">0o17064</span>)  <span class="hljs-comment"># 输出十进制数，八进制以0o开头且后面为0~7的数组成</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">0x123eaf</span>)  <span class="hljs-comment"># 输出十六进制数，十六进制由ox开头且后面由0~9和a~f组成</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210701194554196.png" alt="在这里插入图片描述"><br>与上面的二进制的情况类似，计算机会自动翻译成十进制数输出。</p><h3 id="（5）用打印变量类型"><a href="#（5）用打印变量类型" class="headerlink" title="（5）用打印变量类型"></a>（5）用打印变量类型</h3><p>利用内置函数——<strong>type</strong><br>例如：<br>(1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">f1 = <span class="hljs-literal">True</span><br>f2 = <span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(f1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(f2))  <span class="hljs-comment"># 通过内置函数type来打印出f1和f2的类型都是布尔型</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210701195459193.png" alt="变量类型为布尔"><br>得到变量<strong>f1</strong>和<strong>f2</strong>为布尔型<br>(2)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1</span><br>b = <span class="hljs-number">1.0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(b))<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/2021070120024643.png" alt="在这里插入图片描述"><br>得到变量<strong>a</strong>和<strong>b</strong>的类型为整形和浮点型</p><p>###（5）字符串与函数混搭输出<br>如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">things = [food, clothes, city]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;列表的长度:&quot;</span>, <span class="hljs-built_in">len</span>(things)) <span class="hljs-comment"># 中间用逗号连接</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/57dc647c538a4c43b9722ead940c2691.png" alt="在这里插入图片描述"><br>这里<strong>len</strong>作为一个函数——测量列表长度，这里字符串“<strong>列表的长度</strong>”和函数表达式<strong>len</strong>一次性输出，中间借助逗号连接，输出结果如上图👆。</p><h1 id="二、转义字符"><a href="#二、转义字符" class="headerlink" title="二、转义字符"></a>二、转义字符</h1><h2 id="常见的转义字符"><a href="#常见的转义字符" class="headerlink" title="常见的转义字符"></a>常见的转义字符</h2><h3 id="（1）转义字符"><a href="#（1）转义字符" class="headerlink" title="（1）转义字符"></a>（1）转义字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;helloo\thello&quot;</span>)  <span class="hljs-comment"># \t前有五个字符</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;helloooo\thello&quot;</span>) <span class="hljs-comment"># \t前有八个字符</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/zdyaujFk67nTIKL.png"><br>显而易见第一个print中间三个空格，而第二个只有一个空格，原因在于<br><strong>\t</strong>也叫水平制表符，即将字符每四个一分组，<br>第一个<strong>print</strong>:   在这里前面的o已经在里面了，所以除去o还要空三列。<br>第二个<strong>print</strong>：前面的的“ooo”已经占三列，所以这里除去三列还剩下一列，则空一列。</p><h3 id="（2）转义字符-b"><a href="#（2）转义字符-b" class="headerlink" title="（2）转义字符\b"></a>（2）转义字符\b</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello\bworld&quot;</span>)  <span class="hljs-comment">#注意此时\b的位置和运行后的&#x27;o&#x27;</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210618133615729.png" alt="在这里插入图片描述">  </p><p>显而易见\t前面的’o’不见了<br>原因是：<strong>\b</strong>为退格运算符，使光标从当前位置向前移动一个位置最终输出为”hellworld”</p><h3 id="3-转义字符-n"><a href="#3-转义字符-n" class="headerlink" title="(3)转义字符\n"></a>(3)转义字符\n</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello\nworld&quot;</span>) <br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/YwfkgQB6Epme15j.png" alt="在这里插入图片描述"><br><strong>\n</strong>是日常最熟悉的换行符，与C语言中的作用一致，这里就不过多赘述了。</p><h3 id="（4-”-‘-字符的输出"><a href="#（4-”-‘-字符的输出" class="headerlink" title="（4)  \  ”  ‘  字符的输出"></a>（4)  \  ”  ‘  字符的输出</h3><p>三者是编程里较为敏感的字符，用通常的方法则不能输出，需要借助’\‘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\&quot;&quot;</span>)  <span class="hljs-comment"># 输出双引号</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\&#x27;&quot;</span>)  <span class="hljs-comment"># 输出单引号</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\\&quot;</span>)  <span class="hljs-comment"># 输出斜杠</span><br></code></pre></td></tr></table></figure><p>输出:<br><img src="https://s2.loli.net/2022/06/01/CfzcLF2o3R5nMKh.png" alt="在这里插入图片描述"><br>但是注意，一个\只对一个\ ‘ “ 的输出起作用<br>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;http :\\\\www.baidu.com&quot;</span>)  <span class="hljs-comment"># 实际输出的为第二第四个反斜杠</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;老师说：\&quot;大家好\&quot;&quot;</span>) <span class="hljs-comment"># 输出大家后左右两旁的引号</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210618135425963.png" alt="在这里插入图片描述"></p><h3 id="其他转义字符（附表）"><a href="#其他转义字符（附表）" class="headerlink" title="其他转义字符（附表）"></a>其他转义字符（附表）</h3><p><img src="https://img-blog.csdnimg.cn/20210619011920921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzU2ODgxNDYz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h1><h2 id="一、列表是什么"><a href="#一、列表是什么" class="headerlink" title="一、列表是什么"></a>一、列表是什么</h2><p>列表由一系列特定顺序排列的元素组成。说白了Python里的列表就是C语言里的字符串。<br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">bicycles = [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>]<br></code></pre></td></tr></table></figure><p>如以上列表，bicycles表示列表的名字，而其中的 “<strong>a</strong>“, “<strong>b</strong>“, “<strong>c</strong>“,表示的是该列表里的元素。</p><h2 id="二、列表元素的访问"><a href="#二、列表元素的访问" class="headerlink" title="二、列表元素的访问"></a>二、列表元素的访问</h2><p>还举上个列表的例子，这里要求输出指定元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">bicycles = [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>]<br><span class="hljs-built_in">print</span>(bicycles[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p>bicycles[0]表示这个这个列表中的第一个元素，所以这里相当于用特定的序号来代替元素。<br>这里的”序号“<strong>0</strong>，被称为Python列表里的<strong>索引</strong>。</p><h2 id="三、对列表中元素的调用"><a href="#三、对列表中元素的调用" class="headerlink" title="三、对列表中元素的调用"></a>三、对列表中元素的调用</h2><p>给出一个列表，我们在打印输出的时候需要调用到列表中的某些元素，应该怎么办呢？举例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>message = <span class="hljs-string">f&quot;My brother wants an <span class="hljs-subst">&#123;car[<span class="hljs-number">2</span>]&#125;</span>&quot;</span><br><span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/MpnyGPBf9d1jNUL.png" alt="在这里插入图片描述"><br>这里就实现调用了，将列表中的”<strong>audi</strong>“元素，通过索引——<strong>car[2]</strong>,调用，不过注意<strong>messsage</strong>中字符串混入变量（car[2])需要用到 { }，前面已经提到过。</p><h2 id="四、列表元素的修改、添加和删除"><a href="#四、列表元素的修改、添加和删除" class="headerlink" title="四、列表元素的修改、添加和删除"></a>四、列表元素的修改、添加和删除</h2><h3 id="1-修改列表元素"><a href="#1-修改列表元素" class="headerlink" title="1.修改列表元素"></a>1.修改列表元素</h3><p>利用列表<strong>索引</strong>将列表中的元素通过直接替换的方式来定向改变列表中的元素。<br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>car[<span class="hljs-number">0</span>] = <span class="hljs-string">&quot;Toyota&quot;</span> <span class="hljs-comment"># 直接选中第一个元素并替换实现定向改变</span><br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/6MweZVYjtxFkvAl.png" alt="在这里插入图片描述"></p><h3 id="2-在列表中添加元素"><a href="#2-在列表中添加元素" class="headerlink" title="2.在列表中添加元素"></a>2.在列表中添加元素</h3><h4 id="（1）在列表末尾添加元素"><a href="#（1）在列表末尾添加元素" class="headerlink" title="（1）在列表末尾添加元素"></a>（1）在列表末尾添加元素</h4><p>利用.<strong>append</strong>（  ）后缀将新元素添加到列表末尾，括号里面吗填要添加的元素，注意后缀不要忘了加。<br>结构为：<strong>列表名.append(“新元素”）</strong><br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br><span class="hljs-built_in">print</span>(car)<br>car.append(<span class="hljs-string">&quot;toyota&quot;</span>)<br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/zfJmud24tGU7YbC.png" alt="在这里插入图片描述"></p><h4 id="（2）在列表中插入元素"><a href="#（2）在列表中插入元素" class="headerlink" title="（2）在列表中插入元素"></a>（2）在列表中插入元素</h4><p>利用<strong>insert</strong>（ ，）可以在列表的任何位置插入新元素，所以括号里的两个空，一个表示插入新元素的位置即<strong>索引序号</strong>，另一个表示插入的<strong>元素值</strong><br>结构为：<strong>列表名.insert(索引，”新元素“）</strong><br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>car.insert(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;toyota&quot;</span>)<br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210713015247455.png" alt="在这里插入图片描述"><br>显而易见，将新元素<strong>toyota</strong>插入在索引1号位置，原索引1号及其之后的元素挨个往后平移一格。</p><h3 id="3-从列表中删除元素"><a href="#3-从列表中删除元素" class="headerlink" title="3.从列表中删除元素"></a>3.从列表中删除元素</h3><h4 id="1-使用-del-语句删除元素"><a href="#1-使用-del-语句删除元素" class="headerlink" title="(1)使用 del 语句删除元素"></a>(1)使用 del 语句删除元素</h4><p>这里和之前的<strong>insert</strong>正好相反，在已知执行元素索引的情况下，直接定向的删除该元素。<br>结构为：<strong>del 列表名[索引]</strong><br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br><span class="hljs-keyword">del</span> car[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/5dFVBuWbeZn8PvY.png" alt="在这里插入图片描述"></p><h4 id="2-1-使用pop-删除元素"><a href="#2-1-使用pop-删除元素" class="headerlink" title="(2.1)使用pop( )删除元素"></a>(2.1)使用pop( )删除元素</h4><p>pop( ）也是用来删除列表<strong>末尾</strong>中的元素，但是要比 <strong>del</strong> 多出一个功能就是，删除之后并且可以让你接着使用它。<br>结构为：<strong>列表名 .pop()</strong><br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>car2 = car.pop() <span class="hljs-comment"># 这里实质上是两部运算，一次弹出末尾元素，其次将末尾元素赋值给car2</span><br><span class="hljs-built_in">print</span>(car)<br><span class="hljs-built_in">print</span>(car2)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/asL8R21NZXUiIbe.png" alt="在这里插入图片描述"><br>显而易见这里利用car,pop()赋值给一个变量(car2)，将car列表末尾元素（audi)删除并将删除元素赋值给变量(car2)。</p><h4 id="（2-2）弹出列表中任何位置的元素"><a href="#（2-2）弹出列表中任何位置的元素" class="headerlink" title="（2.2）弹出列表中任何位置的元素"></a>（2.2）弹出列表中任何位置的元素</h4><p>这里是对pop的一个补充，上文中说到的pop只是针对于列表末尾元素，这里如果将pop()括号里加上索引，就可以自由的对列表中的任何元素进行如上操作。<br>结构为：<strong>变量名 &#x3D; 列表名.pop(索引）</strong><br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>car2 = car.pop(<span class="hljs-number">1</span>) <br><span class="hljs-built_in">print</span>(car)<br><span class="hljs-built_in">print</span>(car2)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/Mo7pzCquKvEnjSH.png" alt="在这里插入图片描述"><br>显而易见，这里将列表<strong>索引1</strong>位置的元素弹出并赋值给变量car2。</p><h4 id="（3）根据值删除元素"><a href="#（3）根据值删除元素" class="headerlink" title="（3）根据值删除元素"></a>（3）根据值删除元素</h4><p>以上的修改列表中的元素都是已知该元素索引的情况下进行的，如果我们仅仅知道要删除元素的值，就需要借助<strong>remove()<strong>。<br>结构为：</strong>列表名.remove(“元素名“）</strong><br>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-string">&quot;benz&quot;</span>, <span class="hljs-string">&quot;bmw&quot;</span>, <span class="hljs-string">&quot;audi&quot;</span>]<br>car.remove(<span class="hljs-string">&quot;benz&quot;</span>)<br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/71RLr6PNBgdof4u.png" alt="在这里插入图片描述"><br>由此可见，可以先将执行元素赋值给变量，然后<strong>remove</strong>可以对该变量进行执行；也可以直接对元素执行，不过这里注意元素要写成变量形式，所以不要忘了<strong>引号</strong></p><h3 id="4-组织列表"><a href="#4-组织列表" class="headerlink" title="4.组织列表"></a>4.组织列表</h3><h4 id="（1）使用方法sort-对列表永久排序"><a href="#（1）使用方法sort-对列表永久排序" class="headerlink" title="（1）使用方法sort()对列表永久排序"></a>（1）使用方法sort()对列表永久排序</h4><p>利用sorted对列表按字符串<strong>从小到大</strong>进行排序，且这种<br>排序得到一个新列表是<strong>永久性</strong>的，只有对该列表<strong>重新赋值</strong>才可改变<br>结构为：<strong>列表名.sort()</strong><br>顺序：这里的顺序是通过比较列表内元素的大小（从首字母往后按照<strong>ASCLL码</strong>的大小进行比较），例如，1 &lt; 2, boy &lt; bpy<br><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">car = [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>]<br>car.sort()<br><span class="hljs-built_in">print</span>(car)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[1,2,4]</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">l_ist =[<span class="hljs-string">&quot;fireman &quot;</span>, <span class="hljs-string">&quot;doctor&quot;</span>, <span class="hljs-string">&quot;receptionist&quot;</span>, <span class="hljs-string">&quot;programmer&quot;</span>, <span class="hljs-string">&quot;saleswoman &quot;</span>, <span class="hljs-string">&quot;publisher&quot;</span>]<br>l_ist.sort()<br><span class="hljs-built_in">print</span>(l_ist)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/AHXyhPTx256rInS.png" alt="在这里插入图片描述"><br>若想通过从大到小倒序（<strong>顺序倒序</strong>）排列，只需要在sort()括号里输入reverse&#x3D;True，即<br>l_st.sort(reverse&#x3D;True）<br>输出：<br><img src="https://s2.loli.net/2022/06/01/HmSXPYWdRn7rUgQ.png" alt="在这里插入图片描述"></p><h4 id="（2）使用函数sorted（）对列表临时排序"><a href="#（2）使用函数sorted（）对列表临时排序" class="headerlink" title="（2）使用函数sorted（）对列表临时排序"></a>（2）使用函数sorted（）对列表临时排序</h4><p>临时排序不同于永久排序，也就是说排序的生存期仅限于该语句<br>结构：<strong>sorted(列表名）</strong><br>举个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">l_ist = [<span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>]<br><span class="hljs-built_in">sorted</span>(l_ist)<br><span class="hljs-built_in">print</span>(l_ist) <span class="hljs-comment"># 先排序后输出（无）</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(l_ist)) <span class="hljs-comment"># 直接排序输出（有）</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://img-blog.csdnimg.cn/20210713174654632.png" alt="在这里插入图片描述"><br>对比以上两个输出结果可以发现，第二行的sorted(l_ist)对列表进行排序，而在第三行打印输出的适合顺序又还原了，而第四行排序后直接进行打印输出顺序还在，对比可见，<strong>sorted（)<strong>的排序属于</strong>临时性</strong>的。</p><h4 id="3-利用reverse-对列表倒序"><a href="#3-利用reverse-对列表倒序" class="headerlink" title="(3)利用reverse()对列表倒序"></a>(3)利用reverse()对列表倒序</h4><p>这里的倒序是指单单将原列表顺序颠倒，其余都没有改变<br>结构：<strong>列表名.reverse()</strong><br>举例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>]<br>a.reverse()<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/AkNOucqeMEr34Hi.png" alt="在这里插入图片描述"></p><h4 id="4-确定列表长度"><a href="#4-确定列表长度" class="headerlink" title="(4)确定列表长度"></a>(4)确定列表长度</h4><p>使用函数len()可以快速确定列表的长度（<strong>元素个数</strong>）<br>结构：<strong>len(列表名）</strong><br><strong>例:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">l_ist = [<span class="hljs-string">&quot;fireman &quot;</span>, <span class="hljs-string">&quot;doctor&quot;</span>, <span class="hljs-string">&quot;receptionist&quot;</span>, <span class="hljs-string">&quot;programmer&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(l_ist)) <br><span class="hljs-comment"># len只是一个函数自身不具有输出功能需要用print才能看出具体长度</span><br></code></pre></td></tr></table></figure><p>输出：<br><img src="https://s2.loli.net/2022/06/01/LhdpVu7lof6KzNM.png" alt="在这里插入图片描述"><br>即表明列表的长度或元素个数为4</p><h1 id="四、字典"><a href="#四、字典" class="headerlink" title="四、字典"></a>四、字典</h1><h2 id="一、形式："><a href="#一、形式：" class="headerlink" title="一、形式："></a>一、形式：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">rivers = &#123;<br>    <span class="hljs-string">&quot;Níluóhé&quot;</span>: <span class="hljs-string">&quot;Egypt&quot;</span>,<br>    <span class="hljs-string">&quot;Yangtze River&quot;</span>: <span class="hljs-string">&quot;China&quot;</span>,<br>    <span class="hljs-string">&quot;Yellow River&quot;</span>: <span class="hljs-string">&quot;China&quot;</span>,<br>    <span class="hljs-string">&quot;Mississippi River&quot;</span>: <span class="hljs-string">&quot;USA&quot;</span>,<br>    <span class="hljs-string">&quot;Ganges&quot;</span>:<span class="hljs-string">&quot;India&quot;</span><br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="二、使用字典"><a href="#二、使用字典" class="headerlink" title="二、使用字典"></a>二、使用字典</h2><h3 id="（一）访问字典中的值"><a href="#（一）访问字典中的值" class="headerlink" title="（一）访问字典中的值"></a>（一）访问字典中的值</h3><h4 id="1-由键访问值"><a href="#1-由键访问值" class="headerlink" title="1.由键访问值"></a>1.由键访问值</h4><p>例如对字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>要求输出字典中第二个键对应的值：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(color_like[<span class="hljs-string">&quot;girl&quot;</span>]) <span class="hljs-comment"># 输出 pink</span><br></code></pre></td></tr></table></figure><p>输出字典中的值形式为：<strong>字典名[键名]</strong><br>要求将值代入字符串中：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">color = color_like[<span class="hljs-string">&quot;girl&quot;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Girls’ favorite color is <span class="hljs-subst">&#123;color&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">Girls’ favorite color <span class="hljs-keyword">is</span> pink<br></code></pre></td></tr></table></figure><h4 id="2-由值访问键"><a href="#2-由值访问键" class="headerlink" title="2.由值访问键"></a>2.由值访问键</h4><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">s = &#123;<span class="hljs-string">&quot;A&quot;</span>: <span class="hljs-string">&quot;100&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>: <span class="hljs-string">&quot;200&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(s.keys())[<span class="hljs-built_in">list</span>(s.values()).index(<span class="hljs-string">&quot;200&quot;</span>)])<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">B<br></code></pre></td></tr></table></figure><p>由此可见通过化列表找索引从而可以实现通过值访问键</p><h3 id="（二）在字典中添加键值对"><a href="#（二）在字典中添加键值对" class="headerlink" title="（二）在字典中添加键值对"></a>（二）在字典中添加键值对</h3><h5 id="字典是一种动态结构，可以在里面随时添加键值对"><a href="#字典是一种动态结构，可以在里面随时添加键值对" class="headerlink" title="字典是一种动态结构，可以在里面随时添加键值对"></a>字典是一种动态结构，可以在里面随时添加键值对</h5><p>仍然使用上述字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>要求在字典中添加一个<strong>键值对</strong>：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(color_like)<br>color_like[<span class="hljs-string">&quot;Soldier&quot;</span>] = <span class="hljs-string">&quot;green&quot;</span><br><span class="hljs-built_in">print</span>(color_like)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;blue&#x27;</span>, <span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>&#125;<br>&#123;<span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;blue&#x27;</span>, <span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>, <span class="hljs-string">&#x27;Soldier&#x27;</span>: <span class="hljs-string">&#x27;green&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>Clearly! 字典中新植入了一个键值对</p><h3 id="（三）修改字典中的值"><a href="#（三）修改字典中的值" class="headerlink" title="（三）修改字典中的值"></a>（三）修改字典中的值</h3><p>仍是上述字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>要求把第一个键对应的值由”<strong>blue</strong>“改为”<strong>black</strong>“:<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like[<span class="hljs-string">&quot;boy&quot;</span>] = <span class="hljs-string">&quot;black&quot;</span>  <span class="hljs-comment">#这里与添加值相似</span><br><span class="hljs-built_in">print</span>(color_like)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;black&#x27;</span>, <span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>由此可见，”<strong>blue</strong>“已改为”<strong>black</strong>“</p><h3 id="（四）删除键值对"><a href="#（四）删除键值对" class="headerlink" title="（四）删除键值对"></a>（四）删除键值对</h3><p>使用<strong>del</strong>语句将相应的键值对彻底删除<br>仍然使用上述字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p>要求删除键值对”<strong>boy</strong>“<strong>:</strong>“<strong>blue</strong>“:</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(color_like)<br><span class="hljs-keyword">del</span> color_like[<span class="hljs-string">&quot;boy&quot;</span>]<br><span class="hljs-built_in">print</span>(color_like)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;blue&#x27;</span>, <span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>&#125;<br>&#123;<span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>通过对比，可见”<strong>boy</strong>“的键值对已经在字典中删除</p><h3 id="（五）使用get-来访问字典中的值"><a href="#（五）使用get-来访问字典中的值" class="headerlink" title="（五）使用get( )来访问字典中的值"></a>（五）使用get( )来访问字典中的值</h3><p><strong>get</strong>( )的优势在于，当用常规方法调用字典中的键时，如果指定的键不存在就会出错——显示traceback,指出存在keyError<br>仍旧使用字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;boy&#x27;</span>: <span class="hljs-string">&#x27;blue&#x27;</span>, <span class="hljs-string">&#x27;girl&#x27;</span>: <span class="hljs-string">&#x27;pink&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>如果这时候贸然打印一个不存在的键值，即：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(color_like[<span class="hljs-string">&quot;young&quot;</span>])<br></code></pre></td></tr></table></figure><p>那么系统会报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;E:/pycharm代码/text.py&quot;</span>, line <span class="hljs-number">523</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    <span class="hljs-built_in">print</span>(color_like[<span class="hljs-string">&quot;young&quot;</span>])<br>KeyError: <span class="hljs-string">&#x27;young&#x27;</span><br><span class="hljs-comment"># 指出存在键值错误（KeyError）</span><br></code></pre></td></tr></table></figure><p>如果借助<strong>get</strong>( )来打印输出的话，即：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br>a = color_like.get(<span class="hljs-string">&quot;young&quot;</span>, <span class="hljs-string">&quot;red&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p><strong>get</strong>( )的结构为：<strong>字典名</strong> <strong>.get</strong>(A,B)<br>“young”为第一个参数(A)用于指定键——必不可少<br>“red”为第二个参数(B)用于指定键不存在时要返回的值——可理解为不存在的键对应的值</p><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">red  <span class="hljs-comment"># 返回参数 B（red)</span><br></code></pre></td></tr></table></figure><h3 id="In-addition"><a href="#In-addition" class="headerlink" title="In addition"></a>In addition</h3><p>常规情况下打印输出键值也可以使用<strong>get( )</strong><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">color_like = &#123;<span class="hljs-string">&quot;boy&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>, <span class="hljs-string">&quot;girl&quot;</span>: <span class="hljs-string">&quot;pink&quot;</span>&#125;<br>a = color_like.get(<span class="hljs-string">&quot;boy&quot;</span>)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">blue<br></code></pre></td></tr></table></figure><h2 id="三、遍历字典"><a href="#三、遍历字典" class="headerlink" title="三、遍历字典"></a>三、遍历字典</h2><h5 id="借助于for循环可以实现对字典中键、值、键和值的遍历"><a href="#借助于for循环可以实现对字典中键、值、键和值的遍历" class="headerlink" title="借助于for循环可以实现对字典中键、值、键和值的遍历"></a>借助于for循环可以实现对字典中键、值、键和值的遍历</h5><h3 id="（一）遍历所有键值对"><a href="#（一）遍历所有键值对" class="headerlink" title="（一）遍历所有键值对"></a>（一）遍历所有键值对</h3><h5 id="借助于-item-作为后缀打印每个键以及对应的值"><a href="#借助于-item-作为后缀打印每个键以及对应的值" class="headerlink" title="借助于 .item( )作为后缀打印每个键以及对应的值"></a>借助于 .<strong>item</strong>( )作为后缀打印每个键以及对应的值</h5><p>要求依次同时打印出字典的键和对应的值：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">my_favorite = &#123;<br>    <span class="hljs-string">&quot;food&quot;</span>: <span class="hljs-string">&quot;bread&quot;</span>,<br>    <span class="hljs-string">&quot;clothes&quot;</span>: <span class="hljs-string">&quot;Hoodie&quot;</span>,<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Steven&quot;</span>,<br>    <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;HangZhou&quot;</span><br>&#125;<br><span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> my_favorite.items():  <span class="hljs-comment"># item表明打印出键和值</span><br>    <span class="hljs-comment"># a,b为储存键和值的变量</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;my favorite <span class="hljs-subst">&#123;a&#125;</span> is <span class="hljs-subst">&#123;b&#125;</span>!&quot;</span>)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">my favorite food <span class="hljs-keyword">is</span> bread!<br>my favorite clothes <span class="hljs-keyword">is</span> Hoodie!<br>my favorite name <span class="hljs-keyword">is</span> Steven!<br>my favorite city <span class="hljs-keyword">is</span> HangZhou!<br></code></pre></td></tr></table></figure><h3 id="（二）遍历字典中的所有键"><a href="#（二）遍历字典中的所有键" class="headerlink" title="（二）遍历字典中的所有键"></a>（二）遍历字典中的所有键</h3><h5 id="这里借助-keys-作为后缀打印输出每个键"><a href="#这里借助-keys-作为后缀打印输出每个键" class="headerlink" title="这里借助 .keys( )作为后缀打印输出每个键"></a>这里借助 .keys( )作为后缀打印输出每个键</h5><p>仍然使用以上字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">my_favorite = &#123;<br>    <span class="hljs-string">&quot;food&quot;</span>: <span class="hljs-string">&quot;bread&quot;</span>,<br>    <span class="hljs-string">&quot;clothes&quot;</span>: <span class="hljs-string">&quot;Hoodie&quot;</span>,<br>    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Steven&quot;</span>,<br>    <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;HangZhou&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>要求依次打印出字典中的键：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> my_favorite.keys(): <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;a:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a:food<br>a:clothes<br>a:name<br>a:city<br></code></pre></td></tr></table></figure><h3 id="（三）遍历字典中的所有值"><a href="#（三）遍历字典中的所有值" class="headerlink" title="（三）遍历字典中的所有值"></a>（三）遍历字典中的所有值</h3><h5 id="这里借助-values-作为后缀打印输出每个值"><a href="#这里借助-values-作为后缀打印输出每个值" class="headerlink" title="这里借助 .values( )作为后缀打印输出每个值"></a>这里借助 .values( )作为后缀打印输出每个值</h5><p>要求依次打印出字典中的值：<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> my_favorite.values():  <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;b:<span class="hljs-subst">&#123;b&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">b:bread<br>b:Hoodie<br>b:Steven<br>b:HangZhou<br></code></pre></td></tr></table></figure><h2 id="四、嵌套"><a href="#四、嵌套" class="headerlink" title="四、嵌套"></a>四、嵌套</h2><h3 id="（一）列表中嵌套字典"><a href="#（一）列表中嵌套字典" class="headerlink" title="（一）列表中嵌套字典"></a>（一）列表中嵌套字典</h3><p>例如，下面就是创建一个包含三个字典的列表<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">our_favorite = [<span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-string">&quot;Steven&quot;</span>, <span class="hljs-string">&quot;Jim&quot;</span>]<br>Tom_favorite = &#123;<span class="hljs-string">&quot;food&quot;</span>: <span class="hljs-string">&quot;beef&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;red&quot;</span>&#125;<br>Steven_favotite = &#123;<span class="hljs-string">&quot;food&quot;</span>: <span class="hljs-string">&quot;sandwich&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;blue&quot;</span>&#125;<br>Jim_favorite = &#123;<span class="hljs-string">&quot;food&quot;</span>: <span class="hljs-string">&quot;bread&quot;</span>, <span class="hljs-string">&quot;color&quot;</span>: <span class="hljs-string">&quot;black&quot;</span>&#125;<br><span class="hljs-keyword">for</span> somebody_favorite <span class="hljs-keyword">in</span> our_favorite:<br>    <span class="hljs-comment"># 遍历列表并打印输出各个字典a</span><br>    <span class="hljs-built_in">print</span>(somebody_favorite)<br></code></pre></td></tr></table></figure><h3 id="（二）字典中存储列表"><a href="#（二）字典中存储列表" class="headerlink" title="（二）字典中存储列表"></a>（二）字典中存储列表</h3><p>以下就是字典中嵌入一个列表，列表整体在此作为一个键值<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">pizza = &#123;<br>    <span class="hljs-string">&quot;crust&quot;</span>: <span class="hljs-string">&quot;thick&quot;</span>,<br>    <span class="hljs-string">&quot;topping&quot;</span>: [<span class="hljs-string">&quot;mushrooms&quot;</span>, <span class="hljs-string">&quot;extra cheese&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="（三）字典中存储字典"><a href="#（三）字典中存储字典" class="headerlink" title="（三）字典中存储字典"></a>（三）字典中存储字典</h3><p>以下就是字典中嵌入字典，每一个嵌入字典在此都作为一个键值<br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">pizza_color = &#123;<br>    <span class="hljs-string">&quot;seasoning&quot;</span>: &#123;<span class="hljs-string">&quot;butter&quot;</span>: <span class="hljs-string">&quot;yello&quot;</span>,<br>                  <span class="hljs-string">&quot;pepper&quot;</span>: <span class="hljs-string">&quot;black&quot;</span>,<br>                  <span class="hljs-string">&quot;ketchup&quot;</span>: <span class="hljs-string">&quot;red&quot;</span><br>                  &#125;,<br>    <span class="hljs-string">&quot;tableware&quot;</span>: &#123;<span class="hljs-string">&quot;plate&quot;</span>: <span class="hljs-string">&quot;white&quot;</span>,<br>                  <span class="hljs-string">&quot;fork&quot;</span>: <span class="hljs-string">&quot;silver&quot;</span>,<br>                  <span class="hljs-string">&quot;tablecloth&quot;</span>: <span class="hljs-string">&quot;Orange&quot;</span><br>                  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
